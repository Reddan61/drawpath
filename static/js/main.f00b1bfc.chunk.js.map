{"version":3,"sources":["utils/shortPath.js","store/reducer.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["findLowestNodeCost","costs","processed","lowestNode","lowestCost","Infinity","Object","keys","forEach","node","cost","includes","initialState","dots","graph","context","mode","clickedDot","startDot","finishDot","reducer","state","action","type","payload","dot","position","firstDotIndex","findIndex","el","secondDotIndex","second","x","y","distance","Math","sqrt","pow","newGraph","App","useReducer","dispatch","canvasRef","useRef","contextRef","stateRef","clickButtonHandler","number","getPosition","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","a","isClickDot","alert","redrawCanvas","drawBorderDots","ignoreDot","ctx","current","lineWidth","strokeStyle","beginPath","arc","PI","stroke","closePath","clearRect","width","height","drawArc","wrapped","moveTo","lineTo","positionDot","chooseStartNFinish","index","findDotIndex","start","finish","String","path","neighbors","isFound","value","neighbor","newCost","push","shortPath","convertedPath","curEl","result","unshift","Number","convertPath","i","length","positionArr","color","fillStyle","fill","RADIUS","filter","useEffect","style","getContext","className","classes","app","app__header","onClick","app__button_active","app__main","ref","addDots","connectDots","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uOAmCE,SAASA,EAAmBC,EAAMC,GAChC,IACIC,EADAC,EAAaC,IAUjB,OAPAC,OAAOC,KAAKN,GAAOO,SAAQ,SAAAC,GACzB,IAAIC,EAAOT,EAAMQ,GACdC,EAAON,IAAeF,EAAUS,SAASF,KAC1CL,EAAaM,EACbP,EAAaM,MAGVN,E,kBC9CES,EAAe,CACxBC,KAAK,GACLC,MAAO,GACPC,QAAS,KACTC,KAAK,KACLC,WAAW,KACXC,SAAS,KACTC,UAAU,MAGDC,EAAU,SAACC,EAAMC,GAC1B,OAAOA,EAAOC,MACV,IAAK,QACD,OAAO,2BAAIX,GAAX,IAAwBG,QAAQM,EAAMN,UAC1C,IAAK,aACD,OAAO,2BAAIM,GAAX,IAAiBL,KAAKM,EAAOE,QAAQR,OAASK,EAAML,KAAO,KAAOM,EAAOE,QAAQR,OACrF,IAAK,aACD,OAAO,2BAAIK,GAAX,IAAiBN,QAAQO,EAAOE,QAAQT,UAC5C,IAAK,UACD,OAAO,2BAAIM,GAAX,IAAiBR,KAAK,GAAD,mBAAKQ,EAAMR,MAAX,CAAgBS,EAAOE,QAAQC,QACxD,IAAK,WACD,OAAO,2BAAIJ,GAAX,IAAiBH,SAASI,EAAOE,QAAQC,MAC7C,IAAK,YACD,OAAO,2BAAIJ,GAAX,IAAiBF,UAAUG,EAAOE,QAAQC,MAC9C,IAAK,WACL,GAA+B,OAA5BH,EAAOE,QAAQE,SAAmB,CACjC,IAAMC,EAAgBN,EAAMR,KAAKe,WAAU,SAAAC,GAC3C,OAAGA,EAAG,KAAOR,EAAMJ,WAAW,IAAMY,EAAG,KAAOR,EAAMJ,WAAW,MAMzDa,EAAiBT,EAAMR,KAAKe,WAAU,SAAAC,GAC5C,OAAGA,EAAG,KAAOP,EAAOE,QAAQO,OAAO,IAAMF,EAAG,KAAOP,EAAOE,QAAQO,OAAO,MAKnEC,EAAIX,EAAMJ,WAAW,GAAKK,EAAOE,QAAQO,OAAO,GAChDE,EAAIZ,EAAMJ,WAAW,GAAKK,EAAOE,QAAQO,OAAO,GAChDG,EAAWC,KAAKC,KAAKD,KAAKE,IAAIL,EAAE,GAAKG,KAAKE,IAAIJ,EAAE,IAEhDK,EAAQ,eAAOjB,EAAMP,OAI3B,OAHAwB,EAASX,GAAT,2BAA8BN,EAAMP,MAAMa,IAA1C,kBAA0DG,EAAgBI,IAC1EI,EAASR,GAAT,2BAA+BT,EAAMP,MAAMgB,IAA3C,kBAA4DH,EAAeO,IAEpE,2BAAIb,GAAX,IAAiBJ,WAAYK,EAAOE,QAAQE,SAASZ,MAAMwB,IAE3D,OAAO,2BAAIjB,GAAX,IAAiBJ,WAAYK,EAAOE,QAAQE,WAChD,IAAK,qBACD,OAAO,2BAAIL,GAAX,IAAkBH,SAAS,KAAKC,UAAU,OAC9C,QACI,OAAOE,I,OC2NJkB,MAzQf,WACE,MAAyBC,qBAAWpB,EAAQR,GAA5C,mBAAOS,EAAP,KAAaoB,EAAb,KACMC,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MACpBE,EAAWF,iBAAO,MAOxB,SAASG,EAAmBC,GAC1BN,EAAS,CAAClB,KAAK,aAAaC,QAAS,CAACR,KAAK+B,KAE7C,SAASC,EAAYC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,wBAEtB,MADiB,CAACH,EAAEI,QAAUH,EAAKI,KAAKL,EAAEM,QAAUL,EAAKM,KAhB9C,4CAmBb,WAAuBP,GAAvB,eAAAQ,EAAA,yDACQ/B,EAAWsB,EAAYC,MAEdS,EAAWhC,GAH5B,uBAMIiC,MAAM,kBANV,0CAWQlB,EAAS,CAAClB,KAAK,UAAUC,QAAQ,CAACC,IAAI,YAAIC,MAXlD,OAaEkC,IAbF,4CAnBa,sBAoCb,SAASC,EAAeC,GACtB,IAAMC,EAAMnB,EAAWoB,QACjB3C,EAAQwB,EAASmB,QACvBD,EAAIE,UAAY,EAChBF,EAAIG,YAAc,QAElB7C,EAAMR,KAAKL,SAAQ,SAAAqB,GACdiC,EAAU,KAAOjC,EAAG,IAAMiC,EAAU,KAAOjC,EAAG,KAGjDkC,EAAII,YACJJ,EAAIK,IAAIvC,EAAG,GAAGA,EAAG,GAtCN,GAsCiB,EAAa,EAAVM,KAAKkC,IACpCN,EAAIO,SACJP,EAAIQ,gBAKR,SAASX,IACP,IAAMG,EAAMnB,EAAWoB,QACjB3C,EAAQwB,EAASmB,QAEvBD,EAAIS,UAAU,EAAE,EAAE9B,EAAUsB,QAAQS,MAAM/B,EAAUsB,QAAQU,QAE5DC,EAAQtD,EAAMR,KAAK,SACnBP,OAAOC,KAAKc,EAAMP,OAAON,SAAQ,SAAAqB,GAC/BvB,OAAOC,KAAKc,EAAMP,MAAMe,IAAKrB,SAAQ,SAAAoE,GACnCb,EAAII,YACJJ,EAAIG,YAAc,QAClBH,EAAIE,UAAY,EAChBF,EAAIc,OAAOxD,EAAMR,KAAKgB,GAAI,GAAGR,EAAMR,KAAKgB,GAAI,IAC5CkC,EAAIe,OAAOzD,EAAMR,KAAK+D,GAAS,GAAGvD,EAAMR,KAAK+D,GAAS,IACtDb,EAAIO,SACJP,EAAIQ,kBArEG,4CA0Eb,WAA2BtB,GAA3B,mBAAAQ,EAAA,yDACQM,EAAMnB,EAAWoB,QACjBtC,EAAWsB,EAAYC,GAEvB8B,EAAcrB,EAAWhC,GAJjC,uBAOIiC,MAAM,qBAPV,6BAWMd,EAASmB,QAAQ/C,aAAc8D,EAXrC,iBAYItC,EAAS,CAAClB,KAAK,WAAWC,QAAQ,CAACE,SAASqD,KAC5ClB,EAAekB,GAbnB,4BAcYA,EAdZ,wBAeIhB,EAAII,YACJJ,EAAIG,YAAc,QAClBH,EAAIE,UAAY,EAChBF,EAAIc,OAAOhC,EAASmB,QAAQ/C,WAAW,GAAG4B,EAASmB,QAAQ/C,WAAW,IACtE8C,EAAIe,OAAOC,EAAY,GAAGA,EAAY,IACtChB,EAAIO,SACJP,EAAIQ,YArBR,UAsBU9B,EAAS,CAAClB,KAAK,WAAWC,QAAQ,CAACE,SAAS,KAAKK,OAAOgD,KAtBlE,QAuBInB,IAvBJ,6CA1Ea,sBAoGb,SAASoB,EAAmB/B,GAC1B,IAAMc,EAAMnB,EAAWoB,QACjBtC,EAAWsB,EAAYC,GAEzB/B,EAAW2B,EAASmB,QAAQ9C,SAC5BC,EAAY0B,EAASmB,QAAQ7C,UAEjC,GAAgB,OAAbD,EAAH,CAUA,GAAiB,OAAdC,EAAoB,CACrB,IAAM8D,EAAQC,EAAaxD,GAEN,kBAAXuD,GACRxC,EAAS,CAAClB,KAAK,YAAYC,QAAQ,CAACC,IAAIwD,KAE1C9D,EAAY8D,EAGd,MFrIG,SAAmBnE,EAAMqE,EAAMC,GAClC,IAAMnF,EAAQ,GACRC,EAAY,CAACmF,OAAOF,IACpBG,EAAO,GACTC,EAAY,GACZC,GAAU,EACdlF,OAAOC,KAAKO,GAAON,SAAQ,SAAAC,GACzB,IAAIgF,EAAQ3E,EAAMqE,GAAO1E,GACzBR,EAAMQ,GAAQgF,GAASpF,OAGzB,IADA,IAAII,EAAOT,EAAmBC,EAAMC,GAVM,aAYxC,IAAMQ,EAAOT,EAAMQ,GAanB,GAZA8E,EAAYzE,EAAML,GAClBH,OAAOC,KAAKgF,GAAW/E,SAAQ,SAAAkF,GAC7B,IAAIC,EAAUjF,EAAO6E,EAAUG,GAC5BC,EAAU1F,EAAMyF,KACdA,IAAaL,OAAOF,GACrBG,EAAK7E,GAAQiF,GAEbzF,EAAMyF,GAAYC,EAClBL,EAAKI,GAAYjF,OAIpBA,IAAS4E,OAAOD,GAEjB,OADAI,GAAU,EACV,QAEFtF,EAAU0F,KAAKnF,GACfA,EAAOT,EAAmBC,EAAMC,IAnB5BO,GAAM,gBAqBZ,MAAO,CAACR,EAAMqF,EAAKE,GEqGUK,CAAUhD,EAASmB,QAAQlD,MAAMI,EAASC,GAAvE,mBAAamE,GAAb,WAEA,GAFA,KAEA,CAKA,IAAMQ,EAqER,SAAqBR,EAAKH,EAAMC,GAC9B,IAAIW,EAAQV,OAAOD,GACbY,EAAS,GAEf,KAAMX,OAAOU,KAAWV,OAAOF,IAC7Ba,EAAOC,QAAQC,OAAOH,IACtBA,EAAQG,OAAOZ,EAAKS,IAItB,OADAC,EAAOC,QAAQC,OAAOf,IACfa,EA/EeG,CAAYb,EAAKpE,EAASC,GAChDyC,IAEAG,EAAII,YACJJ,EAAIG,YAAc,MAClBH,EAAIE,UAAY,EAChBF,EAAIc,OAAOhC,EAASmB,QAAQnD,KAAKiF,EAAc,IAAI,GAAGjD,EAASmB,QAAQnD,KAAKiF,EAAc,IAAI,IAC9F,IAAI,IAAIM,EAAI,EAAGA,EAAEN,EAAcO,OAAOD,IACpCrC,EAAIe,OAAOjC,EAASmB,QAAQnD,KAAKiF,EAAcM,IAAI,GAAGvD,EAASmB,QAAQnD,KAAKiF,EAAcM,IAAI,IAC9FrC,EAAIO,SAENP,EAAIQ,YAGJI,EAAQ,CAAC,CAAC9B,EAASmB,QAAQnD,KAAKiF,EAAc,IAAI,GAAGjD,EAASmB,QAAQnD,KAAKiF,EAAc,IAAI,KAAK,OAElG,IAAI,IAAIM,EAAI,EAAGA,EAAIN,EAAcO,OAAOD,IACtCzB,EAAQ,CAAC,CAAC9B,EAASmB,QAAQnD,KAAKiF,EAAcM,IAAI,GAAGvD,EAASmB,QAAQnD,KAAKiF,EAAcM,IAAI,KAAK,OAGpG3D,EAAS,CAAClB,KAAK,WAAWC,QAAQ,CAACC,IAAI,QACvCgB,EAAS,CAAClB,KAAK,YAAYC,QAAQ,CAACC,IAAI,aAzBtCkC,MAAM,sBAtBR,CACE,IAAMsB,EAAQC,EAAaxD,GAEN,kBAAXuD,IACRxC,EAAS,CAAClB,KAAK,WAAWC,QAAQ,CAACC,IAAIwD,KACvCpB,EAAehB,EAASmB,QAAQnD,KAAKoE,MA6C3C,SAASN,EAAQ2B,EAAYC,GAC3B,IAAMxC,EAAMnB,EAAWoB,QACvBsC,EAAY9F,SAAQ,SAAAqB,GAClBkC,EAAII,YACJJ,EAAIyC,UAAYD,EAChBxC,EAAIK,IAAIvC,EAAG,GAAGA,EAAG,GAzJN,GAyJiB,EAAa,EAAVM,KAAKkC,IACpCN,EAAI0C,OACJ1C,EAAIQ,eAIR,SAASW,EAAaxD,GAWpB,OAVcmB,EAASmB,QAAQnD,KAAKe,WAAU,SAAAC,GAC5C,IAAMG,EAAIN,EAAS,GAAKG,EAAG,GACrBI,EAAIP,EAAS,GAAKG,EAAG,GAG3B,OAFiBM,KAAKC,KAAKD,KAAKE,IAAIL,EAAE,GAAKG,KAAKE,IAAIJ,EAAE,KAEvCyE,MAQnB,SAAShD,EAAWhC,GAUlB,OATgBmB,EAASmB,QAAQnD,KAAK8F,QAAO,SAAA9E,GAC3C,IAAMG,EAAIG,KAAKE,IAAIX,EAAS,GAAKG,EAAG,GAAG,GACjCI,EAAIE,KAAKE,IAAIX,EAAS,GAAKG,EAAG,GAAG,GACvC,OAAGM,KAAKC,KAAKJ,EAAEC,IAjLJ,MAuLE,GAoDjB,OA9OAY,EAASmB,QAAU3C,EACnBuB,EAAWoB,QAAU3C,EAAMN,QAoO3B6F,qBAAU,WACRlE,EAAUsB,QAAQS,MAAQ,KAC1B/B,EAAUsB,QAAQU,OAAS,IAC3BhC,EAAUsB,QAAQ6C,MAAMpC,MAAQ,SAChC/B,EAAUsB,QAAQ6C,MAAMnC,OAAS,QACjC,IAAMX,EAAMrB,EAAUsB,QAAQ8C,WAAW,MACzCrE,EAAS,CAAClB,KAAK,aAAaC,QAAQ,CAACT,QAAQgD,OAC7C,IAGA,sBAAKgD,UAAWC,IAAQC,IAAxB,UACE,yBAAQF,UAAaC,IAAQE,YAA7B,UACE,wBAAQC,QApDd,WACcvE,EAAWoB,QAEnBQ,UAAU,EAAE,EAAE9B,EAAUsB,QAAQS,MAAM/B,EAAUsB,QAAQU,QAC5DjC,EAAS,CAAClB,KAAK,WAgDX,mBACA,wBAAQwF,UAAS,UAAsB,IAAf1F,EAAML,MAAcgG,IAAQI,mBAAnC,KAA0DD,QAAW,kBAAMrE,EAAmB,IAA/G,kBACA,wBAAQiE,UAAS,UAAsB,IAAf1F,EAAML,MAAcgG,IAAQI,mBAAnC,KAA0DD,QAAW,WACpFxD,MAAM,oBACNb,EAAmB,IAFrB,yBAIA,wBAAQiE,UAAS,UAAsB,IAAf1F,EAAML,MAAcgG,IAAQI,mBAAnC,KAA0DD,QAAW,SAAClE,GACrFU,MAAM,2BACNb,EAAmB,IAFrB,0BAKF,sBAAMiE,UAAaC,IAAQK,UAA3B,SACE,wBAAQC,IAAO5E,EAAWyE,QA1ChC,SAAqBlE,GAGnB,OAFaJ,EAASmB,QAAQhD,MAG5B,KAAK,GA7NI,oCA8NPuG,CAAQtE,GACR,MACF,KAAK,GAhOI,oCAiOPuE,CAAYvE,GACZ,MACF,KAAK,EACH+B,EAAmB/B,aC/NZwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,iBAAiB,YAAc,yBAAyB,mBAAqB,gCAAgC,UAAY,0B","file":"static/js/main.f00b1bfc.chunk.js","sourcesContent":["export function shortPath(graph,start,finish) {\r\n    const costs = {}\r\n    const processed = [String(start)]\r\n    const path = {}\r\n    let neighbors = {}\r\n    let isFound = false\r\n    Object.keys(graph).forEach(node => {\r\n      let value = graph[start][node]\r\n      costs[node] = value || Infinity\r\n    })\r\n    let node = findLowestNodeCost(costs,processed)\r\n    while(node) {\r\n      const cost = costs[node]\r\n      neighbors = graph[node]\r\n      Object.keys(neighbors).forEach(neighbor => {\r\n        let newCost = cost + neighbors[neighbor]\r\n        if(newCost < costs[neighbor]) {\r\n          if(neighbor === String(start)) {\r\n            path[node] = neighbor\r\n          } else {\r\n            costs[neighbor] = newCost\r\n            path[neighbor] = node\r\n          }\r\n        }\r\n      })\r\n      if(node === String(finish)) {\r\n        isFound = true\r\n        break\r\n      }\r\n      processed.push(node)\r\n      node = findLowestNodeCost(costs,processed)\r\n    }\r\n    return [costs,path,isFound]\r\n  }\r\n\r\n  function findLowestNodeCost(costs,processed) {\r\n    let lowestCost = Infinity\r\n    let lowestNode\r\n    \r\n    Object.keys(costs).forEach(node => {\r\n      let cost = costs[node]\r\n      if(cost < lowestCost && !processed.includes(node)) {\r\n        lowestCost = cost\r\n        lowestNode = node\r\n      }\r\n    })\r\n    return lowestNode\r\n  }","export const initialState = {\r\n    dots:[],\r\n    graph: {},\r\n    context: null,\r\n    mode:null,\r\n    clickedDot:null,\r\n    startDot:null,\r\n    finishDot:null\r\n  }\r\n  \r\nexport const reducer = (state,action) => {\r\n    switch(action.type) {\r\n        case \"clear\": \r\n            return {...initialState,context:state.context}\r\n        case \"changeMode\":\r\n            return {...state,mode:action.payload.mode === state.mode ? null : action.payload.mode}\r\n        case \"setContext\":\r\n            return {...state,context:action.payload.context}\r\n        case \"addDots\":\r\n            return {...state,dots:[...state.dots,action.payload.dot]}\r\n        case \"startDot\":\r\n            return {...state,startDot:action.payload.dot}\r\n        case \"finishDot\":\r\n            return {...state,finishDot:action.payload.dot}\r\n        case \"clickDot\":\r\n        if(action.payload.position === null) {\r\n            const firstDotIndex = state.dots.findIndex(el => {\r\n            if(el[0] === state.clickedDot[0] && el[1] === state.clickedDot[1]) {\r\n                return true\r\n            }\r\n            return false\r\n            })\r\n            \r\n            const secondDotIndex = state.dots.findIndex(el => {\r\n            if(el[0] === action.payload.second[0] && el[1] === action.payload.second[1]) {\r\n                return true\r\n            }\r\n            return false\r\n            })\r\n            const x = state.clickedDot[0] - action.payload.second[0]\r\n            const y = state.clickedDot[1] - action.payload.second[1]\r\n            const distance = Math.sqrt(Math.pow(x,2) + Math.pow(y,2))\r\n\r\n            const newGraph = {...state.graph}\r\n            newGraph[firstDotIndex] = {...state.graph[firstDotIndex],[secondDotIndex]:distance}\r\n            newGraph[secondDotIndex] = {...state.graph[secondDotIndex],[firstDotIndex]:distance}\r\n\r\n            return {...state,clickedDot: action.payload.position,graph:newGraph}\r\n        }\r\n            return {...state,clickedDot: action.payload.position}\r\n        case \"dropCalculatedPath\": \r\n            return {...state, startDot:null,finishDot:null}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n","import React, { useEffect, useReducer, useRef } from 'react'\nimport classes from './App.module.css';\nimport { shortPath } from './utils/shortPath';\nimport {reducer, initialState} from './store/reducer';\n\n\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  const canvasRef = useRef(null)\n  const contextRef = useRef(null)\n  const stateRef = useRef(null)\n\n  stateRef.current = state \n  contextRef.current = state.context\n\n  const RADIUS = 25\n\n  function clickButtonHandler(number) {\n    dispatch({type:\"changeMode\",payload: {mode:number}})\n  }\n  function getPosition(e) {\n    const rect = e.target.getBoundingClientRect()\n    const position = [e.clientX - rect.left,e.clientY - rect.top]\n    return position\n  }\n  async function addDots(e) {\n    const position = getPosition(e)\n\n    const isBusy = isClickDot(position) ? true : false\n\n    if(isBusy) {\n      alert(\"Place is taken\")\n      return\n    }\n   \n    //drawArc([position],\"black\")\n    await dispatch({type:\"addDots\",payload:{dot:[...position]}})\n\n    redrawCanvas()\n   \n  }\n\n  function drawBorderDots(ignoreDot) {\n    const ctx = contextRef.current\n    const state = stateRef.current\n    ctx.lineWidth = 5\n    ctx.strokeStyle = \"green\"\n\n    state.dots.forEach(el => {\n      if(ignoreDot[0] === el[0] && ignoreDot[1] === el[1]) {\n        return\n      }\n      ctx.beginPath()\n      ctx.arc(el[0],el[1],RADIUS, 0, Math.PI * 2)\n      ctx.stroke()\n      ctx.closePath()\n    })\n    \n  }\n\n  function redrawCanvas() {\n    const ctx = contextRef.current\n    const state = stateRef.current\n\n    ctx.clearRect(0,0,canvasRef.current.width,canvasRef.current.height)\n\n    drawArc(state.dots,\"black\")\n    Object.keys(state.graph).forEach(el => {    \n      Object.keys(state.graph[el]).forEach(wrapped => {\n        ctx.beginPath()\n        ctx.strokeStyle = \"black\"\n        ctx.lineWidth = 5\n        ctx.moveTo(state.dots[el][0],state.dots[el][1])\n        ctx.lineTo(state.dots[wrapped][0],state.dots[wrapped][1])\n        ctx.stroke()\n        ctx.closePath()\n      }) \n    })\n  }\n\n  async function connectDots(e) {\n    const ctx = contextRef.current\n    const position = getPosition(e)\n\n    const positionDot = isClickDot(position)\n\n    if(!positionDot) {\n      alert(\"Click on the dots\")\n      return\n    }\n\n    if(!stateRef.current.clickedDot && positionDot) {\n      dispatch({type:\"clickDot\",payload:{position:positionDot}})\n      drawBorderDots(positionDot)\n    } else if(positionDot) {\n      ctx.beginPath()\n      ctx.strokeStyle = \"black\"\n      ctx.lineWidth = 5\n      ctx.moveTo(stateRef.current.clickedDot[0],stateRef.current.clickedDot[1])\n      ctx.lineTo(positionDot[0],positionDot[1])\n      ctx.stroke()\n      ctx.closePath()\n      await dispatch({type:\"clickDot\",payload:{position:null,second:positionDot}})\n      redrawCanvas()\n    }\n  }\n  function chooseStartNFinish(e) {\n    const ctx = contextRef.current\n    const position = getPosition(e)\n\n    let startDot = stateRef.current.startDot\n    let finishDot = stateRef.current.finishDot\n\n    if(startDot === null) {\n      const index = findDotIndex(position)\n      \n      if(typeof(index) === \"number\") {\n        dispatch({type:\"startDot\",payload:{dot:index}})\n        drawBorderDots(stateRef.current.dots[index])\n      }\n      return\n    }\n\n    if(finishDot === null) {\n      const index = findDotIndex(position)\n\n      if(typeof(index) === \"number\") {\n        dispatch({type:\"finishDot\",payload:{dot:index}})\n      }\n      finishDot = index\n    }\n\n    const [costs,path,isFound] = shortPath(stateRef.current.graph,startDot,finishDot)\n\n    if(!isFound) {\n      alert(\"Path not found\")\n      return\n    }\n\n    const convertedPath = convertPath(path,startDot,finishDot)\n    redrawCanvas()\n    //draw red lines instead of black lines \n    ctx.beginPath()\n    ctx.strokeStyle = \"red\"\n    ctx.lineWidth = 5\n    ctx.moveTo(stateRef.current.dots[convertedPath[0]][0],stateRef.current.dots[convertedPath[0]][1])\n    for(let i = 1; i<convertedPath.length;i++) {\n      ctx.lineTo(stateRef.current.dots[convertedPath[i]][0],stateRef.current.dots[convertedPath[i]][1])\n      ctx.stroke()\n    }\n    ctx.closePath()\n\n    //draw red circle instead of black circle \n    drawArc([[stateRef.current.dots[convertedPath[0]][0],stateRef.current.dots[convertedPath[0]][1]]],\"red\")\n\n    for(let i = 1; i < convertedPath.length;i++) {\n      drawArc([[stateRef.current.dots[convertedPath[i]][0],stateRef.current.dots[convertedPath[i]][1]]],\"red\")\n    }\n\n    dispatch({type:\"startDot\",payload:{dot:null}})\n    dispatch({type:\"finishDot\",payload:{dot:null}})\n  }\n  \n  function drawArc(positionArr,color) {\n    const ctx = contextRef.current\n    positionArr.forEach(el => {\n      ctx.beginPath()\n      ctx.fillStyle = color\n      ctx.arc(el[0],el[1],RADIUS, 0, Math.PI * 2)\n      ctx.fill()\n      ctx.closePath()\n    })\n  }\n\n  function findDotIndex(position) {\n    const index = stateRef.current.dots.findIndex(el => {\n      const x = position[0] - el[0]\n      const y = position[1] - el[1]\n      const distance = Math.sqrt(Math.pow(x,2) + Math.pow(y,2))\n      \n      if(distance <= RADIUS * 2) {\n        return true\n      }\n      return false\n    })\n    return index\n  }\n  \n  function isClickDot(position) {\n    const tempArr = stateRef.current.dots.filter(el => {\n      const x = Math.pow(position[0] - el[0],2)\n      const y = Math.pow(position[1] - el[1],2)\n      if(Math.sqrt(x+y) <= RADIUS) {\n        return true\n      }\n      return false\n    })\n\n    return tempArr[0]\n  }\n\n  function clearCanvas() {\n    const ctx = contextRef.current\n\n    ctx.clearRect(0,0,canvasRef.current.width,canvasRef.current.height)\n    dispatch({type:'clear'})\n  }\n\n  function convertPath(path,start,finish) {\n    let curEl = String(finish)\n    const result = []\n    \n    while(String(curEl) !== String(start)) {\n      result.unshift(Number(curEl))\n      curEl = Number(path[curEl])\n    }\n    \n    result.unshift(Number(start))\n    return result\n  }\n\n  \n\n  function clickCanvas(e) {\n    const mode = stateRef.current.mode\n\n    switch(mode) {\n      case 1: \n        addDots(e)\n        break\n      case 2: \n        connectDots(e)\n        break\n      case 3:\n        chooseStartNFinish(e)\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    canvasRef.current.width = 1800\n    canvasRef.current.height = 850\n    canvasRef.current.style.width = 1800 + \"px\"\n    canvasRef.current.style.height = 850 + \"px\"\n    const ctx = canvasRef.current.getContext('2d')\n    dispatch({type:\"setContext\",payload:{context:ctx}})\n  },[])\n\n  return (\n    <div className={classes.app}>\n      <header className = {classes.app__header}>\n        <button onClick = {clearCanvas}>Clear</button>\n        <button className = {`${state.mode === 1 && classes.app__button_active} `} onClick = {() => clickButtonHandler(1)}>Dots</button>\n        <button className = {`${state.mode === 2 && classes.app__button_active} `} onClick = {() => {\n          alert(\"Connect the dots\")\n          clickButtonHandler(2)\n        }}>Connections</button>\n        <button className = {`${state.mode === 3 && classes.app__button_active} `} onClick = {(e) => {\n          alert(\"Choose start and finish\")\n          clickButtonHandler(3)\n        }}>Calculate</button>\n      </header>\n      <main className = {classes.app__main}>\n        <canvas ref = {canvasRef} onClick = { clickCanvas }></canvas>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3WI_l\",\"app__header\":\"App_app__header__3vS3-\",\"app__button_active\":\"App_app__button_active__1gPBl\",\"app__main\":\"App_app__main__MBrnY\"};"],"sourceRoot":""}