{"version":3,"sources":["App.js","reportWebVitals.js","index.js","App.module.css"],"names":["initialState","dots","graph","context","mode","clickedDot","startDot","finishDot","isCalculated","reducer","state","action","type","payload","dot","position","firstDotIndex","findIndex","el","secondDotIndex","second","x","y","distance","Math","sqrt","pow","newGraph","bool","App","useReducer","dispatch","canvasRef","useRef","contextRef","stateRef","clickButtonHandler","number","current","canvasClickHanler","useCallback","e","ctx","offsetX","offsetY","clearCanvas","isClickDot","alert","drawArc","positionDot","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","index","findDotIndex","start","finish","costs","processed","String","path","neighbors","isFound","Object","keys","forEach","node","value","Infinity","findLowestNodeCost","cost","neighbor","newCost","push","shortPath","convertedPath","curEl","result","unshift","Number","convertPath","i","length","positionArr","color","fillStyle","arc","PI","fill","RADIUS","filter","clearRect","width","height","lowestNode","lowestCost","includes","useEffect","style","getContext","addEventListener","className","classes","app","app__header","onClick","app__button_active","app__main","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c6b61374.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useReducer, useRef, useState } from 'react'\nimport classes from './App.module.css';\n\nconst initialState = {\n  dots:[],\n  graph: {},\n  context: null,\n  mode:null,\n  clickedDot:null,\n  startDot:null,\n  finishDot:null,\n  isCalculated:false\n}\n\nconst reducer = (state,action) => {\n  switch(action.type) {\n    case \"clear\": \n      return {...initialState,context:state.context}\n    case \"changeMode\":\n      return {...state,mode:action.payload.mode === state.mode ? null : action.payload.mode}\n    case \"setContext\":\n      return {...state,context:action.payload.context}\n    case \"addDots\":\n      return {...state,dots:[...state.dots,action.payload.dot]}\n    case \"startDot\":\n      return {...state,startDot:action.payload.dot}\n    case \"finishDot\":\n      return {...state,finishDot:action.payload.dot}\n    case \"clickDot\":\n      if(action.payload.position === null) {\n        const firstDotIndex = state.dots.findIndex(el => {\n          if(el[0] === state.clickedDot[0] && el[1] === state.clickedDot[1]) {\n            return true\n          }\n          return false\n        })\n        \n        const secondDotIndex = state.dots.findIndex(el => {\n          if(el[0] === action.payload.second[0] && el[1] === action.payload.second[1]) {\n            return true\n          }\n          return false\n        })\n        const x = state.clickedDot[0] - action.payload.second[0]\n        const y = state.clickedDot[1] - action.payload.second[1]\n        const distance = Math.sqrt(Math.pow(x,2) + Math.pow(y,2))\n\n        const newGraph = {...state.graph}\n        newGraph[firstDotIndex] = {...state.graph[firstDotIndex],[secondDotIndex]:distance}\n        newGraph[secondDotIndex] = {...state.graph[secondDotIndex],[firstDotIndex]:distance}\n\n        return {...state,clickedDot: action.payload.position,graph:newGraph}\n      }\n      return {...state,clickedDot: action.payload.position}\n    case \"setCalculate\":\n      return {...state,isCalculated:action.payload.bool}\n    default :\n      return state\n  }\n}\n\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  const canvasRef = useRef(null)\n  const contextRef = useRef(null)\n  const stateRef = useRef(null)\n\n  stateRef.current = state \n  contextRef.current = state.context\n\n  const RADIUS = 25\n\n  function clickButtonHandler(number) {\n    dispatch({type:\"changeMode\",payload: {mode:number}})\n  }\n  \n  const canvasClickHanler = useCallback((e) => {\n    const ctx = contextRef.current\n    const position = [e.offsetX,e.offsetY]\n    \n    if(stateRef.current.isCalculated) {\n      clearCanvas()\n    }\n\n    if(stateRef.current.mode === 1) {\n      const isBusy = isClickDot(position) ? true : false\n\n      if(isBusy) {\n        alert(\"Place is taken\")\n        return\n      }\n\n      drawArc([position],\"black\")\n      dispatch({type:\"addDots\",payload:{dot:[...position]}})\n      return\n    }\n\n    if(stateRef.current.mode === 2) {\n      const positionDot = isClickDot(position)\n      if(!positionDot) {\n        alert(\"Click on the dots\")\n        return\n      }\n\n      if(!stateRef.current.clickedDot && positionDot) {\n        dispatch({type:\"clickDot\",payload:{position:positionDot}})\n      } else if(positionDot) {\n        ctx.beginPath()\n        ctx.strokeStyle = \"black\"\n        ctx.lineWidth = 5\n        ctx.moveTo(stateRef.current.clickedDot[0],stateRef.current.clickedDot[1])\n        ctx.lineTo(positionDot[0],positionDot[1])\n        ctx.stroke()\n        ctx.closePath()\n        dispatch({type:\"clickDot\",payload:{position:null,second:positionDot}})\n      }\n      return\n    }\n\n    if(stateRef.current.mode === 3) {\n      let startDot = stateRef.current.startDot\n      let finishDot = stateRef.current.finishDot\n\n      if(startDot === null) {\n        const index = findDotIndex(position)\n        \n        if(typeof(index) === \"number\") {\n          dispatch({type:\"startDot\",payload:{dot:index}})\n        }\n        return\n      }\n\n      if(finishDot === null) {\n        const index = findDotIndex(position)\n\n        if(typeof(index) === \"number\") {\n          dispatch({type:\"finishDot\",payload:{dot:index}})\n        }\n        finishDot = index\n      }\n      \n      const [costs,path,isFound] = shortPath(stateRef.current.graph,startDot,finishDot)\n\n      dispatch({type:\"setCalculate\",payload:{bool:true}})\n\n      if(!isFound) {\n        alert(\"Path not found\")\n        return\n      }\n\n      const convertedPath = convertPath(path,startDot,finishDot)\n\n      //draw red lines instead of black lines \n      ctx.beginPath()\n      ctx.strokeStyle = \"red\"\n      ctx.lineWidth = 5\n      ctx.moveTo(stateRef.current.dots[convertedPath[0]][0],stateRef.current.dots[convertedPath[0]][1])\n      for(let i = 1; i<convertedPath.length;i++) {\n        ctx.lineTo(stateRef.current.dots[convertedPath[i]][0],stateRef.current.dots[convertedPath[i]][1])\n        ctx.stroke()\n      }\n      ctx.closePath()\n\n      //draw red circle instead of black circle \n      drawArc([[stateRef.current.dots[convertedPath[0]][0],stateRef.current.dots[convertedPath[0]][1]]],\"red\")\n\n      for(let i = 1; i < convertedPath.length;i++) {\n        drawArc([[stateRef.current.dots[convertedPath[i]][0],stateRef.current.dots[convertedPath[i]][1]]],\"red\")\n      }\n    }\n\n  },[])\n  \n  function drawArc(positionArr,color) {\n    const ctx = contextRef.current\n    positionArr.forEach(el => {\n      ctx.beginPath()\n      ctx.fillStyle = color\n      ctx.arc(el[0],el[1],RADIUS, 0, Math.PI * 2)\n      ctx.fill()\n      ctx.closePath()\n    })\n  }\n\n  function findDotIndex(position) {\n    const index = stateRef.current.dots.findIndex(el => {\n      const x = position[0] - el[0]\n      const y = position[1] - el[1]\n      const distance = Math.sqrt(Math.pow(x,2) + Math.pow(y,2))\n      \n      if(distance <= RADIUS * 2) {\n        return true\n      }\n      return false\n    })\n    return index\n  }\n  \n  function isClickDot(position) {\n    const tempArr = stateRef.current.dots.filter(el => {\n      const x = Math.pow(position[0] - el[0],2)\n      const y = Math.pow(position[1] - el[1],2)\n      if(Math.sqrt(x+y) <= RADIUS) {\n        return true\n      }\n      return false\n    })\n\n    return tempArr[0]\n  }\n\n  function clearCanvas() {\n    const ctx = contextRef.current\n\n    ctx.clearRect(0,0,canvasRef.current.width,canvasRef.current.height)\n    dispatch({type:'clear'})\n  }\n\n  function convertPath(path,start,finish) {\n    let curEl = String(finish)\n    const result = []\n    \n    while(String(curEl) !== String(start)) {\n      result.unshift(Number(curEl))\n      curEl = Number(path[curEl])\n    }\n    \n    result.unshift(Number(start))\n    return result\n  }\n\n  function shortPath(graph,start,finish) {\n    const costs = {}\n    const processed = [String(start)]\n    const path = {}\n    let neighbors = {}\n    let isFound = false\n    Object.keys(graph).forEach(node => {\n      let value = graph[start][node]\n      costs[node] = value || Infinity\n    })\n    let node = findLowestNodeCost(costs,processed)\n    while(node) {\n      const cost = costs[node]\n      neighbors = graph[node]\n      Object.keys(neighbors).forEach(neighbor => {\n        let newCost = cost + neighbors[neighbor]\n        if(newCost < costs[neighbor]) {\n          if(neighbor === String(start)) {\n            path[node] = neighbor\n          } else {\n            costs[neighbor] = newCost\n            path[neighbor] = node\n          }\n        }\n      })\n      if(node === String(finish)) {\n        isFound = true\n        break\n      }\n      processed.push(node)\n      node = findLowestNodeCost(costs,processed)\n    }\n    return [costs,path,isFound]\n  }\n\n  function findLowestNodeCost(costs,processed) {\n    let lowestCost = Infinity\n    let lowestNode\n    \n    Object.keys(costs).forEach(node => {\n      let cost = costs[node]\n      if(cost < lowestCost && !processed.includes(node)) {\n        lowestCost = cost\n        lowestNode = node\n      }\n    })\n    return lowestNode\n  }\n\n  useEffect(() => {\n    canvasRef.current.width = 1800\n    canvasRef.current.height = 850\n    canvasRef.current.style.width = 1800 + \"px\"\n    canvasRef.current.style.height = 850 + \"px\"\n    const ctx = canvasRef.current.getContext('2d')\n    dispatch({type:\"setContext\",payload:{context:ctx}})\n    canvasRef.current.addEventListener(\"click\",(e) => canvasClickHanler(e))\n  },[])\n\n  return (\n    <div className={classes.app}>\n      <header className = {classes.app__header}>\n        <button onClick = {clearCanvas}>Clear</button>\n        <button className = {`${state.mode === 1 && classes.app__button_active} `} onClick = {() => clickButtonHandler(1)}>Dots</button>\n        <button className = {`${state.mode === 2 && classes.app__button_active} `} onClick = {() => {\n          alert(\"Connect the dots\")\n          clickButtonHandler(2)\n        }}>Connections</button>\n        <button className = {`${state.mode === 3 && classes.app__button_active} `} onClick = {() => {\n          alert(\"Choose start and finish\")\n          clickButtonHandler(3)\n        }}>Calculate</button>\n      </header>\n      <main className = {classes.app__main}>\n        <canvas ref = {canvasRef}></canvas>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3WI_l\",\"app__header\":\"App_app__header__3vS3-\",\"app__button_active\":\"App_app__button_active__1gPBl\",\"app__main\":\"App_app__main__MBrnY\"};"],"sourceRoot":""}